#!/bin/bash

# Define constants
INPUT_DIR="pokemon_data"
OUTPUT_CSV="pokemon_report.csv"
ERROR_LOG="errors.txt"
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to log errors with timestamp
log_error() {
    local error_message="$1"
    echo "$(date '+%Y-%m-%d %H:%M:%S'): $error_message" >> "$ERROR_LOG"
}

# Trap errors and exit cleanly
trap 'log_error "An error occurred. Exiting..."; exit 1' ERR

# Check if jq and awk are installed
if ! command -v jq &> /dev/null; then
    log_error "jq is not installed. Please install jq to proceed."
    exit 1
fi
if ! command -v awk &> /dev/null; then
    log_error "awk is not installed. Please install awk to proceed."
    exit 1
fi

# Check if input directory exists
if [ ! -d "$INPUT_DIR" ]; then
    log_error "Input directory $INPUT_DIR does not exist."
    exit 1
fi

# Initialize CSV file with header
echo "Name,Height (m),Weight (kg)" > "$OUTPUT_CSV"

# Loop through PokÃ©mon JSON files and extract data
for pokemon in "${POKEMON_LIST[@]}"; do
    input_file="$INPUT_DIR/$pokemon.json"
    
    # Check if JSON file exists
    if [ ! -s "$input_file" ]; then
        log_error "JSON file $input_file does not exist or is empty."
        continue
    fi

    # Extract data using jq
    name=$(jq -r '.name' "$input_file" | sed 's/\b\(.\)/\u\1/')
    height=$(jq -r '.height' "$input_file" | awk '{printf ($1 % 10 == 0) ? "%d" : "%.1f", $1/10}')
    weight=$(jq -r '.weight' "$input_file" | awk '{printf ($1 % 10 == 0) ? "%d" : "%.1f", $1/10}')

    # Check if all required fields were extracted
    if [ -z "$name" ] || [ -z "$height" ] || [ -z "$weight" ]; then
        log_error "Failed to extract all required fields from $input_file."
        continue
    fi

    # Append to CSV
    echo "$name,$height,$weight" >> "$OUTPUT_CSV"
done

# Check if CSV file was created and has data
if [ ! -s "$OUTPUT_CSV" ]; then
    log_error "CSV file $OUTPUT_CSV is empty or was not created."
    exit 1
fi

# Print CSV report
echo "CSV Report generated at: $OUTPUT_CSV"
echo ""
cat "$OUTPUT_CSV"
echo ""

# Calculate averages using awk
awk -F, '
    NR==1 {next}  # Skip header
    {
        height_sum += $2
        weight_sum += $3
        count++
    }
    END {
        if (count > 0) {
            printf "Average Height: %.2f m\n", height_sum/count
            printf "Average Weight: %.2f kg\n", weight_sum/count
        } else {
            print "No valid data to calculate averages."
        }
    }
' "$OUTPUT_CSV" || {
    log_error "Failed to calculate averages from $OUTPUT_CSV."
    exit 1
}

exit 0
